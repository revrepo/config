#
# This file is managed by Rev Puppet service as described on Wiki
# page https://revwiki.atlassian.net/wiki/display/OP/Puppet+Centralized+Configuration+Management+System
# Please don't modify the file on the Puppet client server since your changes will be overwritten on the next
# Puppet agent run on the server.
#


upstream varnish222_rev_test_com_http {
        keepalive 32; # keep N connections alive
        server 127.0.0.1:8080 max_fails=0 fail_timeout=0;
}

server {

   listen 80;
   server_name 0efbbd35-a131-4419-b330-00de5eb3696b.revdn.net;
   server_name 0efbbd35-a131-4419-b330-00de5eb3696b.revsdk.net;
   server_name 0efbbd35-a131-4419-b330-00de5eb3696a.revsdk.net;
   # SDK demo app
   server_name 42e276ea-1823-4945-baa4-8747f08d0abe.revsdk.net;

   proxy_set_header X-Orig-Host $host;
   proxy_set_header Connection "";
   proxy_set_header Host $http_host;
   proxy_http_version 1.1;
   proxy_ignore_client_abort on;
   proxy_buffering off;

   if ($http_x_rev_nodes ~ TESTSJC20-BP05) {
     return 508 "A redirection loop was detected on 'TESTSJC20-BP05'. Please review the server configuration.";
   }

   location / {
      proxy_pass http://varnish222_rev_test_com_http/;
      # Wait at most for configured seconds for a reply from Varnish, then return error message.
      proxy_read_timeout 20s;
   }
}

upstream varnish222_rev_test_com_https {
        keepalive 32; # keep N connections alive
        server 127.0.0.1:8443 max_fails=0 fail_timeout=0;
}

server {
    listen 443 ssl http2;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA 3DES RC4 !aNULL !eNULL !LOW !MD5 !EXP !PSK !SRP !DSS +3DES 3DES +RC4 RC4";
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_certificate /opt/revsw-config/apache/generic-site/certs/server-chained.crt;
    ssl_certificate_key /opt/revsw-config/apache/generic-site/certs/server.key;

   server_name 0efbbd35-a131-4419-b330-00de5eb3696b.revdn.net;
   server_name 0efbbd35-a131-4419-b330-00de5eb3696b.revsdk.net;
   server_name 0efbbd35-a131-4419-b330-00de5eb3696a.revsdk.net;
   # SDK demo app
   server_name 42e276ea-1823-4945-baa4-8747f08d0abe.revsdk.net;

   proxy_set_header X-Orig-Host $host;
   proxy_set_header Connection "";
   proxy_set_header Host $http_host;
   proxy_http_version 1.1;
   proxy_ignore_client_abort on;
   proxy_buffering off;

   if ($http_x_rev_nodes ~ TESTSJC20-BP05) {
     return 508 "A redirection loop was detected on 'TESTSJC20-BP05'. Please review the server configuration.";
   }

   location / {
      proxy_pass http://varnish222_rev_test_com_https/;
      # Wait at most for configured seconds for a reply from Varnish, then return error message.
      proxy_read_timeout 20s;
   }
}

server {
        listen 127.0.0.1:9080;
        access_log off; 

        server_name 0efbbd35-a131-4419-b330-00de5eb3696b.revsdk.net;
        server_name 0efbbd35-a131-4419-b330-00de5eb3696a.revsdk.net;
   # SDK demo app
   server_name 42e276ea-1823-4945-baa4-8747f08d0abe.revsdk.net;

        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_ignore_client_abort on;
        proxy_buffering off;

        location / {
                proxy_pass http://$http_x_rev_host$uri$is_args$args;
                proxy_set_header Host $http_x_rev_host;
        }
}

server {
        listen 127.0.0.1:9443;
        access_log off;

        server_name 0efbbd35-a131-4419-b330-00de5eb3696b.revsdk.net;
        server_name 0efbbd35-a131-4419-b330-00de5eb3696a.revsdk.net;
   # SDK demo app
   server_name 42e276ea-1823-4945-baa4-8747f08d0abe.revsdk.net;

        proxy_set_header Connection "";
        proxy_http_version 1.1;
        proxy_ignore_client_abort on;
        proxy_buffering off;

        set $origin_proto "https";

        if ($http_x_rev_proto) {
          set $origin_proto $http_x_rev_proto;
        }

        if ($origin_proto !~ "^(http|https)$") {
            return 400 "X-Rev-Proto HTTP request header can be either 'http' or 'https'";
        }

        location / {
                proxy_pass $origin_proto://$http_x_rev_host$uri$is_args$args;
                proxy_set_header Host $http_x_rev_host;
        }
}

