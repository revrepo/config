#!/bin/bash
#
# This file is managed by Rev Puppet service as described on Wiki
# page https://revwiki.atlassian.net/wiki/display/OP/Puppet+Centralized+Configuration+Management+System
# Please don't modify the file on the Puppet client server since your changes will be overwritten on the next
# Puppet agent run on the server.
#

#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

PROGNAME=`basename $0`
VERSION="version 0.92"
AUTHOR="by Radu MARINESCU radumar1001@yahoo.com"

print_version() {
    echo "$VERSION $AUTHOR"
}

print_help() {
print_version $PROGNAME $VERSION
echo ""
echo "$PROGNAME is a Nagios plugin that you can yse to check the number"
echo "of used inodes on a disk. It processes the output of \"df\" command"
echo "It runs on UNIX, Linux and BSD platforms and reports the following"
echo "performance data:"
echo "- total disk inodes"
echo "- currently used inodes"
echo "- currently used inodes in percents (%)"
echo " "
echo "$PROGNAME [-v] [-h] [-w UsedInodesWarning] [-c UsedInodesCritical] [-p Partition]"
echo " "
echo "Options:"
echo "  --version|-v)"
echo "    prints the program version"
echo "  --help|-h)"
echo "    prints this help information"
echo "  -w)"
echo "    warning threshold (in percents without % sign) for used inodes"
echo "  -c)"
echo "    critical threshold (in percents without % sign) for used inodes"
echo "  -p)"
echo "    disk partition to check"
echo " "
exit 3
}

# float number comparison
function fcomp() {
    awk -v n1=$1 -v n2=$2 'BEGIN{ if (n1<n2) exit 0; exit 1}'
}


if [ $# -lt 1 ]; then
    print_help
    exit 3
fi

while test -n "$1"; do
    case "$1" in
        --help|-h)
            print_help
            exit 3
            ;;
        --version|-v)
            print_version $PROGNAME $VERSION
            exit 3
            ;;
        -w)
            WarnInodes=$2
            shift
            ;;
        -c)
            CritInodes=$2
            shift
            ;;
        -p)
            Partition=$2
            shift
            ;;
        *)
            echo "Unknown argument: $1"
            print_help
            exit 3
            ;;
    esac
    shift
done

if fcomp $WarnInodes 0
then
    WarnInodes=0
fi
if fcomp 100 $WarnInodes
then
    WarnInodes=100
fi

if fcomp $CritInodes 0
then
    CritInodes=0
fi
if fcomp 100 $CritInodes
then
    CritInodes=100
fi

if fcomp $CritInodes $WarnInodes
then
    WarnInodes=$CritInodes
fi


USEDTXT=`/bin/df -Pi $Partition`

InodesTxt=`echo "$USEDTXT" | /bin/grep "${Partition}\$"`
InodesTotal=`echo "$InodesTxt" | awk '{print $2}'`
InodesUsed=`echo "$InodesTxt" | awk '{print $3}'`
InodesFree=`echo "$InodesTxt" | awk '{print $4}'`
InodesUsedProc=`echo "$InodesTxt" | awk '{printf "%.1f", $3*100/$2}'`
InodesFreeProc=`echo "$InodesTxt" | awk '{printf "%.1f", $4*100/$2}'`

WarnInodesAbs=`echo "$WarnInodes $InodesTotal" | awk '{printf "%d", $2*$1/100}'`
CritInodesAbs=`echo "$CritInodes $InodesTotal" | awk '{printf "%d", $2*$1/100}'`

PerfData="'used inodes'=${InodesUsed};${WarnInodesAbs};${CritInodesAbs};0;${InodesTotal} 'used inodes (pct.)'=${InodesUsedProc}%;${WarnInodes};${CritInodes};0;100"

if fcomp $InodesUsedProc $WarnInodes
then
    echo "OK; $Partition: total inodes ${InodesTotal}, used ${InodesUsed} (${InodesUsedProc}%), free ${InodesFree} (${InodesFreeProc}%) | $PerfData"
    exit 0
fi

if fcomp $WarnInodes $InodesUsedProc && fcomp $InodesUsedProc $CritInodes
then
    echo "Warning; $Partition: total inodes ${InodesTotal}, used ${InodesUsed} (${InodesUsedProc}%>${WarnInodes}%), free ${InodesFree} (${InodesFreeProc}%) | $PerfData"
    exit 1
fi

if fcomp $CritInodes $InodesUsedProc
then
    echo "CRITICAL; $Partition: total inodes ${InodesTotal}, used ${InodesUsed} (${InodesUsedProc}%>${CritInodes}%), free ${InodesFree} (${InodesFreeProc}%) | $PerfData"
    exit 2
fi

#otherwise ... UNKNOWN
echo "UNKNOWN; $Partition: total inodes ${InodesTotal}, used ${InodesUsed} (${InodesUsedProc}%), free ${InodesFree} (${InodesFreeProc}%) | $PerfData"
exit 3

