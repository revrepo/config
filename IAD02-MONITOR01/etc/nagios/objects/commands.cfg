###############################################################################
# COMMANDS.CFG - SAMPLE COMMAND DEFINITIONS FOR NAGIOS 4.0.7
#
#
# NOTES: This config file provides you with some example command definitions
#        that you can reference in host, service, and contact definitions.
#       
#        You don't need to keep commands in a separate file from your other
#        object definitions.  This has been done just to make things easier to
#        understand.
#
###############################################################################


################################################################################
#
# SAMPLE NOTIFICATION COMMANDS
#
# These are some example notification commands.  They may or may not work on
# your system without modification.  As an example, some systems will require 
# you to use "/usr/bin/mailx" instead of "/usr/bin/mail" in the commands below.
#
################################################################################


# 'notify-host-by-email' command definition
define command{
	command_name	notify-host-by-email
	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" $CONTACTEMAIL$
	}

# 'notify-service-by-email' command definition
define command{
	command_name	notify-service-by-email
	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n" | /usr/bin/mail -s "** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
	}





################################################################################
#
# SAMPLE HOST CHECK COMMANDS
#
################################################################################


# This command checks to see if a host is "alive" by pinging it
# The check must result in a 100% packet loss or 5 second (5000ms) round trip 
# average time to produce a critical error.
# Note: Five ICMP echo packets are sent (determined by the '-p 5' argument)

# 'check-host-alive' command definition
define command{
        command_name    check-host-alive
        command_line    $USER1$/check_ping -4 -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
        }

# Alternative to 'check-host-alive' command for hosts that can't be pinged
define command {
        command_name    check-host-alive-alt
        command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$
}


################################################################################
#
# SAMPLE SERVICE CHECK COMMANDS
#
# These are some example service check commands.  They may or may not work on
# your system, as they must be modified for your plugins.  See the HTML 
# documentation on the plugins for examples of how to configure command definitions.
#
# NOTE:  The following 'check_local_...' functions are designed to monitor
#        various metrics on the host that Nagios is running on (i.e. this one).
################################################################################

# 'check_local_disk' command definition
define command{
        command_name    check_local_disk
        command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
        }


# 'check_local_load' command definition
define command{
        command_name    check_local_load
        command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
        }


# 'check_local_procs' command definition
define command{
        command_name    check_local_procs
        command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
        }


# 'check_local_users' command definition
define command{
        command_name    check_local_users
        command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
        }


# 'check_local_swap' command definition
define command{
	command_name	check_local_swap
	command_line	$USER1$/check_swap -w $ARG1$ -c $ARG2$
	}


# 'check_local_mrtgtraf' command definition
define command{
	command_name	check_local_mrtgtraf
	command_line	$USER1$/check_mrtgtraf -F $ARG1$ -a $ARG2$ -w $ARG3$ -c $ARG4$ -e $ARG5$
	}


################################################################################
# NOTE:  The following 'check_...' commands are used to monitor services on
#        both local and remote hosts.
################################################################################

# 'check_ftp' command definition
define command{
        command_name    check_ftp
        command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_hpjd' command definition
define command{
        command_name    check_hpjd
        command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ $ARG1$
        }


# 'check_snmp' command definition
define command{
        command_name    check_snmp
        command_line    $USER1$/check_snmp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_http' command definition
define command{
        command_name    check_http
        command_line    $USER1$/check_http -4 -I $HOSTADDRESS$ $ARG1$
        }

define command{
        command_name    check_http_pulse
        command_line    $USER1$/check_http -4 -H $_HOSTPULSE_URL$ -u "/l.gif" $ARG1$
        }


# 'check_ssh' command definition
define command{
	command_name	check_ssh
	command_line	$USER1$/check_ssh $ARG1$ $HOSTADDRESS$
	}


# 'check_dhcp' command definition
define command{
	command_name	check_dhcp
	command_line	$USER1$/check_dhcp $ARG1$
	}


# 'check_ping' command definition
define command{
        command_name    check_ping
        command_line    $USER1$/check_ping -4 -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
        }


# 'check_pop' command definition
define command{
        command_name    check_pop
        command_line    $USER1$/check_pop -H $HOSTADDRESS$ $ARG1$
        }


# 'check_imap' command definition
define command{
        command_name    check_imap
        command_line    $USER1$/check_imap -H $HOSTADDRESS$ $ARG1$
        }


# 'check_smtp' command definition
define command{
        command_name    check_smtp
        command_line    $USER1$/check_smtp -H $HOSTADDRESS$ $ARG1$
        }


# 'check_tcp' command definition
define command{
	command_name	check_tcp
	command_line	$USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
	}


# 'check_udp' command definition
define command{
	command_name	check_udp
	command_line	$USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
	}


# 'check_nt' command definition
define command{
	command_name	check_nt
	command_line	$USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -v $ARG1$ $ARG2$
	}



################################################################################
#
# SAMPLE PERFORMANCE DATA COMMANDS
#
# These are sample performance data commands that can be used to send performance
# data output to two text files (one for hosts, another for services).  If you
# plan on simply writing performance data out to a file, consider using the 
# host_perfdata_file and service_perfdata_file options in the main config file.
#
################################################################################


# 'process-host-perfdata' command definition
define command{
	command_name	process-host-perfdata
	command_line	/usr/bin/printf "%b" "$LASTHOSTCHECK$\t$HOSTNAME$\t$HOSTSTATE$\t$HOSTATTEMPT$\t$HOSTSTATETYPE$\t$HOSTEXECUTIONTIME$\t$HOSTOUTPUT$\t$HOSTPERFDATA$\n" >> /usr/local/nagios/var/host-perfdata.out
	}


# 'process-service-perfdata' command definition
define command{
	command_name	process-service-perfdata
	command_line	/usr/bin/printf "%b" "$LASTSERVICECHECK$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEATTEMPT$\t$SERVICESTATETYPE$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$\t$SERVICEOUTPUT$\t$SERVICEPERFDATA$\n" >> /usr/local/nagios/var/service-perfdata.out
	}


define command{
  command_name check_snmp_storage
  command_line $USER1$/check_snmp_storage.pl -f -C dt34tasdgasetqergsdcc -2 -H $HOSTADDRESS$ $USER7$ -m $ARG1$ -w $ARG2$ -c $ARG3$ $ARG4$
}

define command{
  command_name check_snmp_mem
  command_line $USER1$/check_snmp_mem.pl -f -C dt34tasdgasetqergsdcc -2 -H $HOSTADDRESS$ $USER7$ $ARG1$ -w $ARG2$ -c $ARG3$ $ARG4$
}

define command{
   command_name check_snmp_load
   command_line $USER1$/check_snmp_load.pl -f -C dt34tasdgasetqergsdcc -2 -H $HOSTADDRESS$ $USER7$ -T $ARG1$ -w $ARG2$ -c $ARG3$ $ARG4$
}

define command{
   command_name check_snmp_int
   command_line $USER1$/check_snmp_netint.pl -C dt34tasdgasetqergsdcc -2 -H $HOSTADDRESS$ $USER7$ -n $ARG1$ $ARG2$
}

define command{
   command_name check_snmp_procs
   command_line $USER1$/check_snmp_procs.pl -C dt34tasdgasetqergsdcc -H $HOSTADDRESS$ $ARG1$
}

# begin nagiosgraph configuration
# command to process nagios performance data for nagiosgraph
define command {
  command_name process-service-perfdata-for-nagiosgraph
  command_line /usr/local/nagiosgraph/bin/insert.pl
}
# end nagiosgraph configuration

define command{
   command_name check_nrpe
   command_line $USER1$/check_nrpe -t 20 -H $HOSTADDRESS$ -c $ARG1$ $ARG2$
}

define command{
   command_name check_nagiostats
   command_line $USER1$/check_nagiostats $ARG1$
}

define command{
   command_name check_graphite
   command_line $USER1$/check_graphite -t 3 -H "http://graphite.revsw.net/render/" -M "$ARG1$" -w $ARG2$ -c $ARG3$ -N $ARG4$ -F $ARG5$
}

define command{
   command_name check_rev_dns_names
   command_line $USER1$/check_rev_dns_names.sh /etc/nagios/objects/urls_to_test.txt 
}

define command{
   command_name check_rev_urls
   command_line $USER1$/check_rev_urls.sh $HOSTADDRESS$ /etc/nagios/objects/urls_to_test.txt 
}


define command {
    command_name    check_mongodb
    command_line    $USER1$/nagios-plugin-mongodb/check_mongodb.py -D -H $_HOSTFULL_HOST_NAME$ -A $ARG1$ -P $ARG2$ -W $ARG3$ -C $ARG4$
}

define command {
    command_name    check_mongodb_database
    command_line    $USER1$/nagios-plugin-mongodb/check_mongodb.py -D -H $HOSTADDRESS$ -A $ARG1$ -P $ARG2$ -W $ARG3$ -C $ARG4$ -d $ARG5$
}

define command {
    command_name    check_mongodb_collection
    command_line    $USER1$/nagios-plugin-mongodb/check_mongodb.py -D -H $HOSTADDRESS$ -A $ARG1$ -P $ARG2$ -W $ARG3$ -C $ARG4$ -d $ARG5$ -c $ARG6$
}

define command {
    command_name    check_mongodb_replicaset
    command_line    $USER1$/nagios-plugin-mongodb/check_mongodb.py -D -H $HOSTADDRESS$ -A $ARG1$ -P $ARG2$ -W $ARG3$ -C $ARG4$ -r $ARG5$
}

define command {
    command_name    check_mongodb_query
    command_line    $USER1$/nagios-plugin-mongodb/check_mongodb.py -D -H $HOSTADDRESS$ -A $ARG1$ -P $ARG2$ -W $ARG3$ -C $ARG4$ -q $ARG5$
}

define command {
    command_name    check_revsw_purge_api_workflow
    command_line    $USER1$/check_revsw_purge_api_workflow.sh -t $_HOSTAPI_TEST_OBJECT$ -u $_HOSTAPI_PURGE_URL$
}

define command {
    command_name    check_revsw_rum_workflow
    command_line    $USER1$/check_revsw_rum_workflow.sh $ARG1$
}

define command {
    command_name    check_revsw_rum_workflow_perf
    command_line    $USER1$/check_revsw_rum_workflow_perf.sh -I $HOSTADDRESS$ $ARG1$
}

define command {
    command_name    check_file_age
    command_line    $USER1$/check_file_age $ARG1$
}

define command {
    command_name    check_elb_health
    command_line    $USER1$/check_elb_health.sh -e $_HOSTELB_INSTANCE_NAME$
}

define command {
    command_name    check_revsw_config_push_status
    command_line    $USER1$/check_revsw_config_push_status.sh -H $HOSTADDRESS$
}

define command {
    command_name    check_nsone_monitor_status
    command_line    $USER1$/check_nsone_monitor_status.sh
}

define command {
   command_name change_proxy_cds_status_for_services
   command_line $USER1$/event_handlers/change_proxy_cds_status.sh $SERVICESTATE$ $SERVICESTATETYPE$ $HOSTNAME$ $ARG1$
}

define command {
   command_name change_proxy_cds_status_for_hosts
   command_line $USER1$/event_handlers/change_proxy_cds_status.sh $HOSTSTATE$ $HOSTSTATETYPE$ $HOSTNAME$ $ARG1$
}

define command {
   command_name restart_cds_service
   command_line $USER1$/event_handlers/restart_cds_service.sh $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$ $HOSTADDRESS$ $ARG1$
}

define command {
   command_name restart_cube_service
   command_line $USER1$/event_handlers/restart_cube_service.sh $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$ $HOSTADDRESS$ $ARG1$
}

define command {
   command_name check_revsw_timstamped_rum_requests
   command_line $USER1$/check_revsw_timstamped_rum_requests.sh 
}

define command {
   command_name check_sumologic_upload_status
   command_line $USER1$/check_sumologic_upload_status.sh -d $HOSTNAME$ $ARG1$ 
}

define command {
   command_name check_es_upload_status
   command_line $USER1$/check_es_upload_status.sh -d $HOSTNAME$ $ARG1$ 
}

define command {
   command_name check_es_naxsi_upload_status
   command_line $USER1$/check_es_naxsi_records.sh -d $HOSTNAME$ $ARG1$ 
}

define command {
   command_name check_es_status_codes
   command_line $USER1$/check_es_status_codes.sh -d $HOSTNAME$ $ARG1$ 
}

define command {
   command_name check_sumologic_status_codes
   command_line $USER1$/check_sumologic_status_codes.sh -d $HOSTNAME$ $ARG1$ 
}

define command {
   command_name check_revsw_purge_jobs
   command_line $USER1$/check_revsw_purge_jobs.sh $ARG1$ 
}

define command {
   command_name check_elasticsearch
   command_line /usr/local/bin/check_elasticsearch -H $HOSTADDRESS$ $ARG1$ 
}

define command {
   command_name check_es_system
   command_line $USER1$/check_es_system.sh -H $HOSTADDRESS$ $ARG1$ 
}

define command {
   command_name check_es_unparsed_records
   command_line $USER1$/check_es_unparsed_records.sh $ARG1$ 
}

define command {
   command_name check_revsw_cube_workflow
   command_line $USER1$/check_revsw_cube_workflow.sh -s $HOSTNAME$ -d $_HOSTRMDB_DATABASE$ $ARG1$ 
}

define command {
   command_name check_nginx_status
   command_line $USER1$/check_nginx_status.pl -H $HOSTNAME$ -s nginx-status-monitor.revsw.net $ARG1$
}

define command {
   command_name check_ssl_cert
   command_line $USER1$/nagios-plugins/check_ssl_cert.pl -H $HOSTADDRESS$ $ARG1$
}

define command {
   command_name check_http_json
   command_line $USER1$/check_http_json.rb $ARG1$
}

define command {
   command_name check_cds_status_attributes
   command_line $USER1$/check_http_json.rb  -u https://iad02-cds01.revsw.net:9000$ARG1$ --headers "Authorization: Bearer 2354hsdfhastuqytyaytasydfgajwhg4" $ARG2$
}

define command {
   command_name check_webtest_status_attributes
   command_line $USER1$/check_http_json.rb  -u https://sjc02-wt01.revsw.net$ARG1$ --headers "Authorization: Bearer cp85bqc8onBkVOmqJJ0i0xVqMKXzojCcnNl8CxSx" $ARG2$
}

define command {
   command_name check_test_cds_status_attributes
   command_line $USER1$/check_http_json.rb  -u https://$HOSTADDRESS$:9000$ARG1$ --headers "Authorization: Bearer bcverLJKHiyt8uihiu87665" $ARG2$
}

define command {
   command_name check_quic_service
   command_line echo $ARG1$ | $USER1$/quic_client | grep -q $ARG2$ 
}

define command {
   command_name check_logshipper_status_attributes
   command_line $USER1$/check_http_json.rb  -u https://ord03-ls01.revsw.net:8443$ARG1$ $ARG2$
}
