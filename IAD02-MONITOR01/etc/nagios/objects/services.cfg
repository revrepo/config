

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  all-hosts,!high-ping-time-hosts
        service_description             PING
        check_command                   check_ping!130.0,10%!200.0,30%
	contact_groups			admins-email
	notifications_enabled		0	
        }


# Servers in Asia/APAC region should be in high-ping-time-hosts group
define service {
        use                             generic-service,graphed-service
        hostgroup_name                  high-ping-time-hosts
        service_description             PING
        check_command                   check_ping!300.0,10%!350.0,30%
	contact_groups			admins-email
	notifications_enabled		0	
        }

define service {
	use				generic-service
	hostgroup_name			md-raid-servers
	service_description		Disk: MD RAID Status
	check_command			check_nrpe!check_md_raid
	check_interval			5
	retry_interval			5
	notifications_enabled		0	
} 

#define service {
#	use				generic-service,graphed-service
#	host_name			TESTSJC20-JENKINS01
#	service_description		MySQL Service
#	check_command			check_nrpe!check_mysql
#} 

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers
	service_description		Memory: Free Memory
	check_command			check_nrpe!check_mem! -a "-f -C -w 15 -c 10"
	check_interval			5
	retry_interval			5
} 

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			es-servers
#	service_description		Memory: Free Memory
#	check_command			check_nrpe!check_mem! -a "-f -C -w 10 -c 7"
#	check_interval			5
#	retry_interval			5
#} 

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers,!servers-with-highly-used-swap
	service_description		Memory: Free Swap
	check_command			check_nrpe!check_swap -a "-w 92% -c 90%"
	check_interval			5
	retry_interval			5
	contact_groups			admins-email
	notifications_enabled		0	
} 

define service {
	use				generic-service
	hostgroup_name			linux-servers,!bp-servers,!es-servers,!ls-servers,!logstash-servers,!eth1-servers,!venet0-servers,!BLR02-hosts, !SIN02-hosts,!IAD02-hosts,!cmdb-servers,!PEK02-hosts,!ZUH02-hosts
	host_name			!IAD02-MONITOR01
	service_description		Net: Traffic on eth0
	check_command 			check_snmp_int!eth0!--64bits --label -f -e -Y -B -k -q -M -w 5,5,0,0,0,0 -c 10,10,0,0,0,0
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service
	hostgroup_name			eth1-servers
	service_description		Net: Traffic on eth1
	check_command 			check_snmp_int!eth1!--64bits --label -f -e -Y -B -k -q -M -w 5,5,0,0,0,0 -c 10,10,0,0,0,0
	check_interval			5
	retry_interval			5
}

# Bangalore and Singapore sites are busy with Voonik traffic
define service {
	use				generic-service
	hostgroup_name			BLR02-hosts,SIN02-hosts
	service_description		Net: Traffic on eth0
	check_command 			check_snmp_int!eth0!--64bits --label -f -e -Y -B -k -q -M -w 55,55,0,0,0,0 -c 60,60,0,0,0,0
	check_interval			5
	retry_interval			5
}

# IAD02-MONITOR01 receives a lot of syslog and nginx error logs
define service {
	use				generic-service
	host_name			IAD02-MONITOR01
	hostgroup_name			cmdb-servers
	service_description		Net: Traffic on eth0
	check_command 			check_snmp_int!eth0!--64bits --label -f -e -Y -B -k -q -M -w 10,10,0,0,0,0 -c 20,20,0,0,0,0
	check_interval			5
	retry_interval			5
}

# IAD02 proxy servers are busy with Voonik CO traffic
define service {
        use                             generic-service
        hostgroup_name                  IAD02-hosts,DFW02-hosts,LGA02-hosts,FRA02-hosts,VIE02-hosts,AMS02-hosts,YYZ02-hosts,GRZ02-hosts
        service_description             Net: Traffic on eth0
        check_command                   check_snmp_int!eth0!--64bits --label -f -e -Y -B -k -q -M -w 30,30,0,0,0,0 -c 40,40,0,0,0,0
        check_interval                  5
        retry_interval                  5
}

define service {
	use				generic-service
	hostgroup_name			bp-servers,!eth1-servers,!venet0-servers,!bond1-servers,!BLR02-hosts, !SIN02-hosts,!IAD02-hosts,!DFW02-hosts,!LGA02-hosts,!ATL02-hosts,!FRA02-hosts,!VIE02-hosts,!AMS02-hosts,!YYZ02-hosts,!GRZ02-hosts,!PEK02-hosts,!ZUH02-hosts
	service_description		Net: Traffic on eth0
	check_command 			check_snmp_int!eth0!--64bits --label -f -e -Y -B -k -q -M -w 10,10,0,0,0,0 -c 15,15,0,0,0,0
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service
        hostgroup_name                  bond0-servers, PEK02-hosts, ZUH02-hosts
        service_description             Net: Traffic on bond0
        check_command                   check_snmp_int!bond0!--64bits --label -f -e -Y -B -k -q -M -w 5,5,0,0,0,0 -c 10,10,0,0,0,0
        check_interval                  5
        retry_interval                  5
}

define service {
	use				generic-service
	hostgroup_name			bond1-servers
	service_description		Net: Traffic on bond1
	check_command 			check_snmp_int!bond1!--64bits --label -f -e -Y -B -k -q -M -w 5,5,0,0,0,0 -c 10,10,0,0,0,0
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service
	hostgroup_name			venet0-servers
	service_description		Net: Traffic on venet0
	check_command 			check_snmp_int!venet0!--64bits --label -f -e -Y -B -k -q -M -w 5,5,0,0,0,0 -c 10,10,0,0,0,0
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service
	host_name			SJC02-WPT-SERVER01
	service_description		WPT Agents Status
	check_command 			check_nrpe!check_wpt_agents! -a "-a AMS02-WPT01:52.232.2.133,TLV02-WPT01:185.162.124.210,SJC02-WPT01:13.64.79.16,SJC02-WPT02:13.91.2.9,MAA02-WPT01:13.71.121.136"
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service
	hostgroup_name			ls-servers
	service_description		MongoDB Service
	check_command 			check_nrpe!check_mongodb! -a "-h localhost -q db.DomainsLog.findOne -u root -d logshipper --collection DomainsLog"
}

define service {
	use				generic-service
	hostgroup_name			webtest-servers
	service_description		MongoDB Service
	check_command 			check_nrpe!check_mongodb! -a "-h localhost -q db.WebsiteTest.findOne -u root -d web-tester --collection WebsiteTest"
}

define service {
	use				generic-service
	hostgroup_name			ls-servers
	service_description		Rsyslog Listens On 5141/UDP
	check_command 			check_nrpe!check_listen_tcp_udp_port! -a "-p 5141 -P udp"
}

# ES, Logstash and Log Shipping servers are handling a lot of proxy logs traffic
define service {
	use				generic-service
	hostgroup_name			es-servers,ls-servers,logstash-servers
	service_description		Net: Traffic on eth0
	check_command 			check_snmp_int!eth0!--64bits --label -f -e -Y -B -k -q -M -w 40,40,0,0,0,0 -c 60,60,0,0,0,0
	check_interval			5
	retry_interval			5
	notifications_enabled		0	
}

define service {
	use				generic-service
	host_name			IAD02-MONITOR01
	service_description		Monitoring Processes
	check_command 			check_nrpe!check_procs! -a "-a /usr/bin/sec -c 2:2"
}

define service {
	use				generic-service
	hostgroup_name			linux-servers,!linux-servers-without-ntp-process
	service_description		Basic Processes
	check_command 			check_nrpe!check_snmp_procs!-a "-C dt34tasdgasetqergsdcc -H localhost -N sshd,snmpd,rsyslogd,puppet,cron,ntpd,sendmail-mta,collectl"
}

# A few servers are running in virtualization environments which do not support ntpd service
define service {
	use				generic-service
	hostgroup_name			linux-servers-without-ntp-process
	service_description		Basic Processes
	check_command 			check_nrpe!check_snmp_procs!-a "-C dt34tasdgasetqergsdcc -H localhost -N sshd,snmpd,rsyslogd,puppet,cron,sendmail-mta,collectl"
}

define service {
        use                             generic-service
        hostgroup_name                 	stats-api-servers,webtest-servers
        service_description             Redis Process
        check_command                   check_nrpe!check_snmp_procs!-a "-C dt34tasdgasetqergsdcc -H localhost -N redis-server"
}

#define service {
#        use                             generic-service
#        hostgroup_name                  bp-servers
#        service_description             Varnish Backends Health Status
#	check_command 			check_nrpe!check_varnish_backend_health
#        check_interval                  5
#        retry_interval                  5
#	notifications_enabled		0	
#}

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers,!es-servers,!logstash-servers,!bp-servers,!ls-servers
	host_name			!IAD02-MONITOR01,!IAD02-INSTALL01,!IAD02-GRAPHITE01
	service_description		CPU: Usage
	check_command 			check_nrpe!check_snmp_load!-a "-C dt34tasdgasetqergsdcc -H localhost -w 15 -c 30 -T netsc -f"
	check_interval			5
	retry_interval			5
}

# TODO: test QA shoud not be using so much CPU - need to figure this out...
define service {
	use				generic-service,graphed-service
	hostgroup_name			ls-servers
	service_description		CPU: Usage
	check_command 			check_nrpe!check_snmp_load!-a "-C dt34tasdgasetqergsdcc -H localhost -w 30 -c 40 -T netsc -f"
	check_interval			5
	retry_interval			5
}

# ES and Logstash servers are normally very busy processing log files
define service {
        use                             generic-service,graphed-service
        hostgroup_name                  es-servers,logstash-servers
        service_description             CPU: Usage
        check_command                   check_nrpe!check_snmp_load!-a "-C dt34tasdgasetqergsdcc -H localhost -w 90 -c 95 -T netsc -f"
        check_interval                  5
        retry_interval                  5
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers
        service_description             CPU: Usage
	check_command 			check_nrpe!check_snmp_load!-a "-C dt34tasdgasetqergsdcc -H localhost -w 45 -c 70 -T netsc -f"
        check_interval                  5
        retry_interval                  5
}

define service {
	use				generic-service,graphed-service
	host_name			IAD02-MONITOR01, IAD02-INSTALL01
	service_description		CPU: Usage
	check_command 			check_nrpe!check_snmp_load!-a "-C dt34tasdgasetqergsdcc -H localhost -w 99 -c 100 -T netsc -f"
	check_interval			5
	retry_interval			5
	contact_groups			admins-email
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	host_name			IAD02-GRAPHITE01
	service_description		CPU: Usage
	check_command 			check_nrpe!check_snmp_load!-a "-C dt34tasdgasetqergsdcc -H localhost -w 50 -c 80 -T netsc -f"
	check_interval			5
	retry_interval			5
	contact_groups			admins-email
	notifications_enabled		0	
}

define service {
	use				generic-service
	hostgroup_name			bp-servers
	service_description		BP Processes										
	check_command 			check_nrpe!check_snmp_procs!-a "-C dt34tasdgasetqergsdcc -H localhost -N nginx,varnishd,named,revsw-pcm-purge,revsw-pcm-confi,logstash-forwar,revsw-quic-prox,redis-server"
}

#define service {
#	use				generic-service
#	hostgroup_name			test-bp-servers
#	service_description		BP Processes										
#	check_command 			check_nrpe!check_snmp_procs!-a "-C dt34tasdgasetqergsdcc -H localhost -N nginx,varnishd,named,revsw-pcm-purge,revsw-pcm-confi,logstash-forwar,redis-server"
#}


#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			linux-servers
#	service_description		Process: Excessive CPU Usage
#	check_command 			check_nrpe!check_procs! -a "-w 70 -c 90 --metric=CPU"
#	check_interval			5
#	retry_interval			5
#	contact_groups			admins-email
#}

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers,!bp-servers,!es-servers,!logstash-servers
        host_name                       !IAD02-MONITOR01,!IAD02-INSTALL01,!IAD02-GRAPHITE01
	service_description		Load Average
	check_command 			check_nrpe!check_load! -a "-w 2,2,2 -c 3,3,3"
	check_interval			5
	retry_interval			5
}

# Logstash and ES servers are pretty busy
define service {
	use				generic-service,graphed-service
	hostgroup_name			es-servers,logstash-servers
	service_description		Load Average
	check_command 			check_nrpe!check_load! -a "-w 8,8,8 -c 10,10,10"
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			bp-servers,!SEL02-hosts,!PUS02-hosts
	service_description		Load Average
	check_command 			check_nrpe!check_load! -a "-w 2,2,2 -c 4,4,4"
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			SEL02-hosts,PUS02-hosts
	service_description		Load Average
	check_command 			check_nrpe!check_load! -a "-w 3,3,3 -c 4,4,4"
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service,graphed-service
        host_name                       IAD02-MONITOR01,IAD02-INSTALL01
	service_description		Load Average
	check_command 			check_nrpe!check_load! -a "-w 50,50,50 -c 70,70,70"
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service,graphed-service
        host_name                       IAD02-GRAPHITE01
	service_description		Load Average
	check_command 			check_nrpe!check_load! -a "-w 3,3,3 -c 5,5,5"
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers,!bp-servers,!es-servers,!rmdb-servers
	service_description		Disk: Free Space and iNodes
	check_command 			check_nrpe!check_disk! -a "--warning=10% --critical=7% --iwarning=25% --icritical=20% --exclude-type=tmpfs --exclude-type=devtmpfs"
	check_interval			5
	retry_interval			5
}

#define service {
#	use				generic-service,graphed-service
#	host_name			TESTSJC20-VICTORDEV01
#	service_description		Disk: Free Space and iNodes
#	check_command 			check_nrpe!check_disk! -a "--warning=6% --critical=5% --iwarning=6% --icritical=2% --exclude-type=tmpfs --exclude-type=devtmpfs"
#	check_interval			5
#	retry_interval			5
#}

define service {
	use				generic-service,graphed-service
	hostgroup_name			rmdb-servers
	service_description		Disk: Free Space and iNodes
	check_command 			check_nrpe!check_disk! -a "--warning=6% --critical=5% --iwarning=40% --icritical=20% --exclude-type=tmpfs --exclude-type=devtmpfs"
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			es-servers
	service_description		Disk: Free Space and iNodes
	check_command 			check_nrpe!check_disk! -a "--warning=3% --critical=2% --iwarning=40% --icritical=20% --exclude-type=tmpfs --exclude-type=devtmpfs  -A --ignore-eregi-path=/elasticsearch-store"
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			es-servers
	service_description		Disk: ES Storage - Free Space and iNodes
	check_command 			check_nrpe!check_disk! -a "--warning=3% --critical=2% --iwarning=40% --icritical=20% --exclude-type=tmpfs --exclude-type=devtmpfs  --ereg-path=/elasticsearch-store"
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			bp-servers
	service_description		Disk: Free Space and iNodes
	check_command 			check_nrpe!check_disk! -a "--warning=3% --critical=2% --iwarning=40% --icritical=20% --exclude-type=tmpfs --exclude-type=devtmpfs"
	check_interval			5
	retry_interval			5
}


define service {
	use				generic-service
	hostgroup_name			linux-servers
	service_description		FD Usage Level
	check_command 			check_nrpe!check_proc_filehandles! -a 55 90
	check_interval			5
	retry_interval			5
}

define service {
	use				generic-service
	host_name			IAD02-INSTALL01
	service_description		Puppet Master Status
	check_command 			check_nrpe!check_puppetmaster
	check_interval			5
	retry_interval			5
}

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			linux-servers,!cmdb-servers
#	host_name			!IAD02-MONITOR01
#	service_description		Process Fork Rate
#	check_command 			check_nrpe!check_forkrate! -a "--warn=9 --critical=15"
#	check_interval			5
#	retry_interval			5
#	contact_groups			admins-email
#	notifications_enabled		0	
#}

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			cmdb-servers
#	service_description		Process Fork Rate
#	check_command 			check_nrpe!check_forkrate! -a "--warn=18 --critical=28"
#	check_interval			5
#	retry_interval			5
#	contact_groups			admins-email
#	notifications_enabled		0	
#}

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers
	service_description		Users
	check_command 			check_nrpe!check_users
	check_interval			5
	retry_interval			5
	contact_groups			admins-email
	notifications_enabled		0	
}

#define service {
#	use				generic-service
#	hostgroup_name			bp-servers,!standard-kernel-servers
#	service_description		REVSW TCP CC Status
#	check_command 			check_nrpe!check_sysctl!-a "net.ipv4.tcp_congestion_control self eq-s revsw"
#	check_interval			15
#	retry_interval			14
#	notification_interval		16
#	notifications_enabled		0	
#}

#define service {
#	use				generic-service
#	hostgroup_name			bp-servers,!new-kernel-servers,!standard-kernel-servers
#	service_description		Kernel Version
#	check_command 			check_nrpe!check_kernel_version!-a 3.11.10-034-revsw 
#	check_interval			15
#	retry_interval			14
#	notification_interval		16
#	notifications_enabled		0	
#}

#define service {
#	use				generic-service
#	hostgroup_name			new-kernel-servers
#	service_description		Kernel Version
#	check_command 			check_nrpe!check_kernel_version!-a 3.11.10-034-revsw-19
#	check_interval			15
#	retry_interval			14
#	notification_interval		16
#	notifications_enabled		0	
#}

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers
	host_name			!IAD02-MONITOR01
	service_description		Zombie Procs
	check_command 			check_nrpe!check_zombie_procs
	check_interval			5
	retry_interval			5
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers
	service_description		Mail Queue Size
	check_command 			check_nrpe!check_mailq
	check_interval			5
	retry_interval			5
	contact_groups			admins-email
	notifications_enabled		0	
}

define service {
	use				generic-service
	hostgroup_name			linux-servers
	service_description		Puppet Agent Status
	check_command 			check_nrpe!check_puppet_agent!-a 2200 3600
	check_interval			5
	retry_interval			5
	notifications_enabled		0	
}

#define service {
#	use				generic-service
#	hostgroup_name			linux-servers
#	service_description		Disk: Free inodes
#	check_command 			check_nrpe!check_inodes!-a 40% 20%
#	check_interval			5
#	retry_interval			5
#}

#define service {
#	use				generic-service
#	hostgroup_name			linux-servers
#	service_description		FD Limits Per Process
#	check_command 			check_nrpe!check_nofile_limits!-a 70 90
#	check_interval			5
#	retry_interval			5
#}


define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers,!linux-servers-without-ntp-process,!logstash-servers
	host_name			!KNA02-BP01
	service_description		NTP Status
	check_command 			check_nrpe!check_ntp
	check_interval			5
	retry_interval			5
	contact_groups			admins-email
	notifications_enabled		0	
}

define service {
	use				generic-service
	hostgroup_name			nagios-servers
	service_description		Nagios: Service Status
	check_command 			check_nrpe!check_nagios
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			webtest-servers
	host_name			VIDEOS.NUUBIT.COM
	service_description		HTTP: Video Download Service
	check_command 			check_http! -p 80 -u "/" -t 5 -w 2 -c 3 -e 403 -H $HOSTNAME$
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			webtest-servers
	host_name			VIDEOS.NUUBIT.COM
	service_description		HTTPS: WebTest API Service
	check_command 			check_http! -p 443 -S -u "/" -t 5 -w 2 -c 3 -e 200 -H $HOSTNAME$
}

#define service {
#	use				generic-service
#	host_name			TESTSJC20-WEBSITE01
#	service_description		SFTP Test Service 222/TCP
#	check_command 			check_tcp!222! -t 5 -w 1 -c 2
#	notifications_enabled		0	
#}

#define service {
#	use				generic-service
#	host_name			TESTSJC20-JENKINS01
#	service_description		Jenkins Service 8080/TCP
#	check_command 			check_http! -p 8080 -u "/" -t 5 -w 2 -c 3
#}

define service {
	use				generic-service
	host_name			IAD02-MONITOR01
	service_description		Marid Service 8080/TCP
	check_command 			check_http! -I localhost -p 8080 -u "/" -t 5 -w 2 -c 3 -e 400
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			bp-servers,!validation-proxy-servers
	service_description		HTTPS: SDK Key HTTP origin
	check_command 			check_http! -H 0efbbd35-a131-4419-b330-00de5eb3696b.revsdk.net -k "X-Rev-Host: monitor.revsw.net" -k "X-Rev-Proto: http" -S -u "/test-cache.js"
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			bp-servers,!validation-proxy-servers
	service_description		HTTPS: SDK Key HTTPS origin
	check_command 			check_http! -H '0efbbd35-a131-4419-b330-00de5eb3696b.revsdk.net' -k 'X-Rev-Host: monitor.revsw.net' -k 'X-Rev-Proto: https' -S -u '/test-cache.js'
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			stats-api-servers
	service_description		Stats API Service
	check_command 			check_http!-t 5 -w 1 -c 3 -e 200 -H "stats-api.revsw.net" -S -u "/v1/stats/apps" -j POST -T 'application/json' -P '{"sdk_key": "a2e23128-4685-41d3-8e49-c8e76c1688ef", "device":{"hight":"667.000000","batt_status":"charging","imsi":"_","cpu":"_","batt_temp":"_","brand":"_","imei":"_","cpu_number":"1.0","uuid":"BF3B748E-FF63-4857-A785-EAB97E464FEA","os":"9.2.1","cpu_freq":"_","cpu_sub":"0","phone_number":"1.0","manufacture":"Apple","radio_serial":"_","serial_number":"_","width":"375.000000","batt_tech":"Li-Ion","meis":"_","cpu_cores":"0","batt_volt":"_","batt_cap":100,"iccid":"_","device":"iPhone7,2 A1549/A1586","model":"iPhone 6"},"location":{"speed":-1,"latitude":0,"longitude":0,"direction":-1},"app_name":"termscorp","sdk_version":"1","version":"1.0.1","log_events":[],"carrier":{"tower_cell_id_s":"_","phone_type":"GSM+CDMA","rssi_best":"_","mcc":"255","rssi_avg":"_","signal_type":"WiFi","network_type":"Edge","mnc":"255","rssi":"_","device_id":"_","tower_cell_id_l":"_","country_code":"ua","net_operator":"Kyivstar","sim_operator":"Kyivstar"},"requests":[],"network":{"cellular_ip_internal":"10.221.180.156","rtt":"0","ip_total_bytes_out":"0","tcp_bytes_in":"0","dns2":"-","tcp_retransmits":"0","cellular_ip_external":"-","ip_total_packets_in":"0","wifi_dhcp":"_","wifi_gw":"10.0.1.1","ip_total_bytes_in":"0","dns1":"10.0.1.1","udp_bytes_in":"0","transport_protocol":"_","udp_bytes_out":"0","wifi_ip":"10.0.1.3","wifi_extip":"-","ip_reassemblies":"0","ip_total_packets_out":"0","wifi_mask":"255.255.255.0","tcp_bytes_out":"0"},"wifi":{"mac":"_","wifi_rssi":"_","wifi_rssibest":"_","wifi_speed":"_","wifi_sig":"_","ssid":"skuns (80:ea:96:ed:92:4e)","wifi_freq":"_","wifi_enc":"_"}}'
}

define service {
	use				generic-service
	hostgroup_name			sdk-config-api-servers
	service_description		SDK Config API Service
	check_command 			check_http_json! -u https://$HOSTNAME$/v1/sdk/config/a2e23128-4685-41d3-8e49-c8e76c1688ef -e configs.0.stats_reporting_url -r 'https://stats-api.revsw.net/v1/stats/apps' 
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			sdk-config-api-servers
	service_description		SDK Config API Service Response Time
	check_command 			check_http! -S -H $HOSTNAME$ -u "/v1/sdk/config/a2e23128-4685-41d3-8e49-c8e76c1688ef" -t 5 -w 3 -c 4
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			monitor-origin-servers
	service_description		Monitor Origin HTTP Source
	check_command 			check_http! -H monitor-origin.revsw.net -u "/test-cache.js" -t 5 -w 1 -c 3 -r "this is a test"
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			monitor-origin-servers
	service_description		Monitor Origin HTTPS Source
	check_command 			check_http!-S -H monitor-origin.revsw.net -u "/test-cache.js" -t 5 -w 1 -c 3 -r "this is a test"
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			boomerang-js-source-servers
	service_description		Boomerang JS HTTP Source
	check_command 			check_http! -H rev-js-source.revdn.net -u "/js/boomerang-rev.min.js" -t 5 -w 2 -c 3
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			boomerang-js-source-servers
	service_description		Boomerang JS HTTPS Source
	check_command 			check_http!-S -H rev-js-source.revdn.net -u "/js/boomerang-rev.min.js" -t 5 -w 2 -c 3
}

define service {
        use                             generic-service,graphed-service
	hostgroup_name			ls-servers
        service_description             LS API: Service Health Check
        check_command                   check_http! -S -u "/v1/healthcheck" -p 8443 -t 10 -w 5 -c 8 --string='Everything is OK'
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  webtest-servers
        service_description             WEBTEST API: Service Health Check
        check_command                   check_http! -S -u "/healthcheck" -p 443 -t 10 -w 5 -c 8 --string='Everything is OK'
}

#define service {
#        use                             generic-service,graphed-service
#        host_name                  	IAD02-API02, IAD02-API03, API.REVAPM.NET
#	hostgroup_name			test-api-servers
#        service_description             API: Service Health Check
#        check_command                   check_http! -S -H "api.revapm.net" -u "/healthcheck" -t 5 -w 2 -c 3 --string='Everything is OK'
#}

#define service {
#        use                             generic-service,graphed-service
#        host_name                  	IAD02-API02, IAD02-API03, API.REVAPM.NET
#	hostgroup_name			test-api-servers
#        service_description             API Service HTTP Redirect
#        check_command                   check_http! -H "api.revapm.net" -u "/healthcheck" -t 5 -w 2 -c 3 -e 301
#}


define service {
        use                             generic-service
        hostgroup_name                 	cds-frontend-services
        service_description             HTTPS Certificate Age
        check_command                   check_ssl_cert! -P 9000 -w 30 -c 15 --domain=ssl001.revsw.net
        check_interval                  15
        retry_interval                  15
        notifications_enabled           0
}

define service {
        use                             generic-service
        hostgroup_name                 	stats-api-servers
        service_description             HTTPS Certificate Age
        check_command                   check_ssl_cert! -P 443 -w 30 -c 15 --domain=ssl001.revsw.net
        check_interval                  15
        retry_interval                  15
        notifications_enabled           0
}

define service {
	use				generic-service
	hostgroup_name			api-frontend-services, boomerang-js-source-servers
	service_description		HTTPS Certificate Age
	check_command 			check_ssl_cert! -w 30 -c 15 --domain=ssl001.revsw.net
	check_interval			15
	retry_interval			15
	notifications_enabled		0	
}

#define service {
#	use				generic-service,graphed-service
#	host_name			IAD02-RUM01
#	service_description		RUM HTTP Test
#	check_command 			check_http! -H "rum01.revsw.net" -u "/service?request=nw_info&user_ip=50.240.197.150&rt.start=navigation&rt.tstart=1414530967512&rt.bstart=1414530968262&rt.end=1414530974632&t_resp=962&t_page=6158&t_done=7120&r=&t_other=boomerang%7C2%2Cboomr_fb%7C750%2Ct_domloaded%7C1157&nt=1&nt_red_cnt=0&nt_nav_type=0&nt_nav_st=1414530967512&nt_red_st=0&nt_red_end=0&nt_fet_st=1414530968129&nt_dns_st=1414530968129&nt_dns_end=1414530968129&nt_con_st=1414530968129&nt_con_end=1414530968129&nt_req_st=1414530968141&nt_res_st=1414530968474&nt_res_end=1414530968490&nt_domloading=1414530968476&nt_domint=1414530969058&nt_domcontloaded_st=1414530969058&nt_domcontloaded_end=1414530969065&nt_domcomp=1414530975018&nt_load_st=1414530975018&nt_load_end=1414530975020&nt_unload_st=0&nt_unload_end=0&nt_spdy=0&nt_first_paint=0&v=0.9.1396020860&u=http%3A%2F%2Frum_workflow_test_iad02-rum01.revdn.net%2F" -t 5 -w 2 -c 3
#}
#
#define service {
#	use				generic-service,graphed-service
#	host_name			IAD02-RUM02
#	service_description		RUM HTTP Test
#	check_command 			check_http! -H "rum01.revsw.net" -u "/service?request=nw_info&user_ip=50.240.197.150&rt.start=navigation&rt.tstart=1414530967512&rt.bstart=1414530968262&rt.end=1414530974632&t_resp=962&t_page=6158&t_done=7120&r=&t_other=boomerang%7C2%2Cboomr_fb%7C750%2Ct_domloaded%7C1157&nt=1&nt_red_cnt=0&nt_nav_type=0&nt_nav_st=1414530967512&nt_red_st=0&nt_red_end=0&nt_fet_st=1414530968129&nt_dns_st=1414530968129&nt_dns_end=1414530968129&nt_con_st=1414530968129&nt_con_end=1414530968129&nt_req_st=1414530968141&nt_res_st=1414530968474&nt_res_end=1414530968490&nt_domloading=1414530968476&nt_domint=1414530969058&nt_domcontloaded_st=1414530969058&nt_domcontloaded_end=1414530969065&nt_domcomp=1414530975018&nt_load_st=1414530975018&nt_load_end=1414530975020&nt_unload_st=0&nt_unload_end=0&nt_spdy=0&nt_first_paint=0&v=0.9.1396020860&u=http%3A%2F%2Frum_workflow_test_iad02-rum02.revdn.net%2F" -t 5 -w 2 -c 3
#}
#
#define service {
#	use				generic-service,graphed-service
#	host_name			IAD02-RUM03
#	service_description		RUM HTTP Test
#	check_command 			check_http! -H "rum01.revsw.net" -u "/service?request=nw_info&user_ip=50.240.197.150&rt.start=navigation&rt.tstart=1414530967512&rt.bstart=1414530968262&rt.end=1414530974632&t_resp=962&t_page=6158&t_done=7120&r=&t_other=boomerang%7C2%2Cboomr_fb%7C750%2Ct_domloaded%7C1157&nt=1&nt_red_cnt=0&nt_nav_type=0&nt_nav_st=1414530967512&nt_red_st=0&nt_red_end=0&nt_fet_st=1414530968129&nt_dns_st=1414530968129&nt_dns_end=1414530968129&nt_con_st=1414530968129&nt_con_end=1414530968129&nt_req_st=1414530968141&nt_res_st=1414530968474&nt_res_end=1414530968490&nt_domloading=1414530968476&nt_domint=1414530969058&nt_domcontloaded_st=1414530969058&nt_domcontloaded_end=1414530969065&nt_domcomp=1414530975018&nt_load_st=1414530975018&nt_load_end=1414530975020&nt_unload_st=0&nt_unload_end=0&nt_spdy=0&nt_first_paint=0&v=0.9.1396020860&u=http%3A%2F%2Frum_workflow_test_iad02-rum03.revdn.net%2F" -t 5 -w 2 -c 3
#}


#define service {
#	use				generic-service,graphed-service
#	host_name			RUM_WORKFLOW_TEST
#	service_description		RUM HTTP Test
#	check_command 			check_http! -H "rum01.revsw.net" -u "/service?request=nw_info&user_ip=50.240.197.150&rt.start=navigation&rt.tstart=1414530967512&rt.bstart=1414530968262&rt.end=1414530974632&t_resp=962&t_page=6158&t_done=7120&r=&t_other=boomerang%7C2%2Cboomr_fb%7C750%2Ct_domloaded%7C1157&nt=1&nt_red_cnt=0&nt_nav_type=0&nt_nav_st=1414530967512&nt_red_st=0&nt_red_end=0&nt_fet_st=1414530968129&nt_dns_st=1414530968129&nt_dns_end=1414530968129&nt_con_st=1414530968129&nt_con_end=1414530968129&nt_req_st=1414530968141&nt_res_st=1414530968474&nt_res_end=1414530968490&nt_domloading=1414530968476&nt_domint=1414530969058&nt_domcontloaded_st=1414530969058&nt_domcontloaded_end=1414530969065&nt_domcomp=1414530975018&nt_load_st=1414530975018&nt_load_end=1414530975020&nt_unload_st=0&nt_unload_end=0&nt_spdy=0&nt_first_paint=0&v=0.9.1396020860&u=http%3A%2F%2Frum_workflow_test.revdn.net%2F" -t 5 -w 2 -c 3
#}

#define service {
#	use				generic-service,graphed-service
#	host_name			RUM_WORKFLOW_TEST
#	service_description		RUM HTTPS Test
#	check_command 			check_http! -S -H "rum01.revsw.net" -u "/service?request=nw_info&user_ip=50.240.197.150&rt.start=navigation&rt.tstart=1414530967512&rt.bstart=1414530968262&rt.end=1414530974632&t_resp=962&t_page=6158&t_done=7120&r=&t_other=boomerang%7C2%2Cboomr_fb%7C750%2Ct_domloaded%7C1157&nt=1&nt_red_cnt=0&nt_nav_type=0&nt_nav_st=1414530967512&nt_red_st=0&nt_red_end=0&nt_fet_st=1414530968129&nt_dns_st=1414530968129&nt_dns_end=1414530968129&nt_con_st=1414530968129&nt_con_end=1414530968129&nt_req_st=1414530968141&nt_res_st=1414530968474&nt_res_end=1414530968490&nt_domloading=1414530968476&nt_domint=1414530969058&nt_domcontloaded_st=1414530969058&nt_domcontloaded_end=1414530969065&nt_domcomp=1414530975018&nt_load_st=1414530975018&nt_load_end=1414530975020&nt_unload_st=0&nt_unload_end=0&nt_spdy=0&nt_first_paint=0&v=0.9.1396020860&u=http%3A%2F%2Frum_workflow_test_https.revdn.net%2F" -t 5 -w 2 -c 3
#}

define service {
	use				generic-service,graphed-service
	hostgroup_name			revwebsite-hosts
	service_description		REVSW.COM HTTP Service
	check_command 			check_http! -H "revsw.com" -u "/" -t 5 -w 2 -c 3 -e 301
}

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			bp-servers,!validation-proxy-servers,!wallarm-servers
#	# hostgroup_name			bp-servers,test-bp-servers
#	service_description		WURFL Module Functionality
#	check_command 			check_http! -H images.voonik.com -u '/52802061/4290489_1-product.jpg' -t 5 -w 2 -c 3 -A 'iPhone'  --header-string='/w_320'
#	notifications_enabled		0	
#}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers,test-bp-servers,!validation-proxy-servers
        service_description             HTTP WAF Pass Check
        check_command                   check_http! -H waf-monitor.revsw.net -u "/test-cache.jpg" -t 5 -w 2 -c 3 --header "Accept-Encoding: deflate, gzip"
	notifications_enabled		0	
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers,!validation-proxy-servers
        service_description             HTTP WAF Block Check
        check_command                   check_http! -H waf-monitor.revsw.net -u "/test-cache.jpg?a=<>" -t 5 -w 2 -c 3 --header "Accept-Encoding: deflate, gzip" -e 418
	notifications_enabled		0	
}

define service {
	use				generic-service
	hostgroup_name			bp-servers
	service_description		Local DNS Resolver
	check_command 			check_nrpe!check_local_dns_resolver
#	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			bp-servers,!high-ping-time-bp-servers,!validation-proxy-servers
	service_description		HTTP Proxy Service
	check_command 			check_http! -H monitor.revsw.net -u "/test-cache.jpg" -t 5 -w 2 -c 3 --header "Accept-Encoding: deflate, gzip"
	event_handler			change_proxy_cds_status_for_services
	notifications_enabled		0	
}

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			test-bp-servers,!validation-proxy-servers
#	service_description		HTTP Proxy Service
#	check_command 			check_http! -H monitor.revsw.net -u "/test-cache.jpg" -t 5 -w 2 -c 3 --header "Accept-Encoding: deflate, gzip"
#	notifications_enabled		0	
#}

define service {
	use				generic-service,graphed-service
	hostgroup_name			bp-servers,!validation-proxy-servers,!wallarm-servers
	service_description		HTTP 64K Object
	check_command 			check_http! -H test.revdn.net -u "/test-64k-file.jpg" -t 5 -w 2 -c 3 --header "Accept-Encoding: deflate, gzip"
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			high-ping-time-bp-servers,!validation-proxy-servers,!tarantool-servers
	service_description		HTTP Proxy Service
	check_command 			check_http! -H monitor.revsw.net -u "/test-cache.jpg" -t 5 -w 2 -c 3 --header "Accept-Encoding: deflate, gzip"
	service_description		HTTP Proxy Service
	event_handler			change_proxy_cds_status_for_services
	notifications_enabled		0	
}


define service {
	use				generic-service,graphed-service
	hostgroup_name			bp-servers,!high-ping-time-bp-servers,!validation-proxy-servers,!tarantool-servers
	service_description		HTTPS Proxy Service
	check_command 			check_http! -S -H monitor.revsw.net -u "/test-cache.jpg" -t 5 -w 2 -c 3 --header "Accept-Encoding: deflate, gzip"
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			high-ping-time-bp-servers,!validation-proxy-servers,!tarantool-servers
	service_description		HTTPS Proxy Service
	check_command 			check_http! -S -H monitor.revsw.net -u "/test-cache.jpg" -t 5 -w 2 -c 3 --header "Accept-Encoding: deflate, gzip"
	notifications_enabled		0	
}

define service {
	use				generic-service
	hostgroup_name			bp-servers,!validation-proxy-servers
	service_description		HTTPS BP Certificate Age
	check_command 			check_ssl_cert! -w 30 -c 15 --domain=ssl001.revsw.net -S www.revapm.com
	check_interval			15
	retry_interval			15
	notifications_enabled		0	
}

define service {
	use				generic-service
	hostgroup_name			co-servers, co-hosts
	service_description		HTTPS CO Certificate Age
	check_command 			check_ssl_cert! -w 30 -c 15 --domain=ssl001.revsw.net -P 19000
	check_interval			15
	retry_interval			15
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			co-hosts,!validation-proxy-servers
	service_description		HTTP CO Service
	check_command 			check_http! -H monitor.revsw.net -u "/test-cache.jpg" -t 5 -w 2 -c 3 -p 18000
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			co-hosts,!validation-proxy-servers
	service_description		HTTPS CO Service
	check_command 			check_http! -H monitor.revsw.net -u "/test-cache.jpg" -t 5 -w 3 -c 4 -p 19000 -S
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			graphite-servers
	service_description		HTTP
	check_command 			check_http! -H graphite.revsw.net -u "/" -t 5 -w 1 -c 2
}

#define service {
#        use                             generic-service,graphed-service
#        hostgroup_name                  test-website-servers
#        service_description             HTTP
#        check_command                   check_http! -u "/" -t 5 -w 1 -c 2
#}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                 	portal-servers
        service_description             Portal: HTTP
        check_command                   check_http! -H portal.revapm.net -u "/" -t 5 -w 1 -c 2 -e 301
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			portal-servers
	service_description		HTTPS
	check_command 			check_http! -S -H portal.revapm.net -u "/" -t 5 -w 1 -c 2
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			rum-servers
	service_description		HTTP
	check_command 			check_http! -u "/service" -t 5 -w 1 -c 2
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			rum-servers
	service_description		HTTPS
	check_command 			check_http! -S -u "/service" -t 5 -w 1 -c 2
}

define service {
	use				generic-service
	hostgroup_name			portal-servers, rum-servers
	service_description		HTTPS Certificage Age
	check_command 			check_ssl_cert! -w 30 -c 15 --domain=ssl001.revsw.net
	check_interval			5
	retry_interval			5
	notifications_enabled		0	
}

#define service {
#	use				generic-service
#	host_name			DEV-CHARGIFY
#	service_description		HTTPS Certificage Age
#	check_command 			check_ssl_cert! -w 30 -c 15 --domain=ssl001.revsw.net
#	check_interval			5
#	retry_interval			5
#	notifications_enabled		0	
#}

define service {
	use				generic-service,graphed-service
	hostgroup_name			cube-servers,cube-1080-servers
	service_description		HTTP 1080/TCP
	check_command 			check_http! -p 1080 -u "/" -t 5 -w 1 -c 2
}

#define service {
#	use				generic-service
#	hostgroup_name			cube-servers
#	service_description		CUBE Submission Status
#	check_command 			check_revsw_cube_workflow
#}

define service {
	use				generic-service,graphed-service
	hostgroup_name			cube-servers, cube-1081-servers
	service_description		HTTP 1081/TCP
	check_command 			check_http! -p 1081 -u "/" -t 5 -w 1 -c 2
}

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			cube-1081-servers
#	service_description		CUBE Evaluator Performance For 30 Days Report
#	check_command 			check_revsw_rum_workflow_perf! -t 15 -w 5 -c 10
#	check_interval			2
#	retry_interval			2
#}


#define service {
#	use				generic-service,graphed-service
#	host_name			IAD02-MONITOR01
#	service_description		Nagios: Service Check Latency
#	check_command 			check_nagiostats! -s -w 5 -c 30
#}

define service {
	use				generic-service,graphed-service
	host_name			IAD02-MONITOR01
	service_description		Nagios: Host Check Latency
	check_command 			check_nagiostats! -o -w 5 -c 30
}

define service {
	use				generic-service,graphed-service
	host_name			IAD02-MONITOR01
	service_description		Nagios: Host Count
	check_command 			check_nagiostats! --hostcount
}

define service {
	use				generic-service,graphed-service
	host_name			IAD02-MONITOR01
	service_description		Nagios: Service Count
	check_command 			check_nagiostats! --servicecount
}

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			bp-servers
#	service_description		Cache: Nuked Objects
#	check_command 			check_graphite!$HOSTNAME$.varnish.cache.nuked!50000!2000000!cache_nuked_objects!5minutes
#	check_interval			5
#	retry_interval			5
#	notifications_enabled		0	
#}

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			linux-servers
#	service_description		Linux Context Switches
#	check_command 			check_graphite!$HOSTNAME$.ctxint.ctx!1000!2000!ctxint_ctx!5minutes
#	check_interval			5
#	retry_interval			5
#	contact_groups			admins-email
#	notifications_enabled		0	
#}

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers,!servers-without-disk-devices,!BLR02-hosts,!SIN02-hosts
	# TODO: need to fix the disk I/O issue on IAD02-MONITOR01 and enable back the monitoring service
	host_name			!IAD02-MONITOR01,!SJC02-BACKUP01,!IAD02-PORTAL01,!IAD02-INSTALL01
	service_description		Disk: I/O Utilization Level
	check_command 			check_graphite!$HOSTNAME$.diskinfo.util.*!10!50!disk_util!5minutes
	check_interval			5
	retry_interval			5
	contact_groups			admins-email
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			BLR02-hosts,SIN02-hosts
	service_description		Disk: I/O Utilization Level
	check_command 			check_graphite!$HOSTNAME$.diskinfo.util.*!80!99!disk_util!5minutes
	check_interval			5
	retry_interval			5
	contact_groups			admins-email
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers
	service_description		CPU: Steal Time
	check_command 			check_graphite!$HOSTNAME$.cputotals.steal!20!50!cpu_steal_time!5minutes
	check_interval			5
	retry_interval			5
	contact_groups			admins-email
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers
	service_description		Net: TCP Errors
	check_command 			check_graphite!$HOSTNAME$.tcpinfo.tcperrs!1!3!tcp_errors!5minutes
	check_interval			5
	retry_interval			5
	contact_groups			admins-email
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers,!VIE02-hosts,!GRZ02-hosts
	service_description		Net: IP Errors
	check_command 			check_graphite!$HOSTNAME$.tcpinfo.iperrs!1!3!ip_errors!5minutes
	check_interval			5
	retry_interval			5
	contact_groups			admins-email
	notifications_enabled		0	
}

define service {
	use				generic-service
	host_name			IAD02-MONITOR01
	service_description		CDN DNS Resolving
	check_command 			check_rev_dns_names
}

define service {
    use                 	generic-service,graphed-service
    hostgroup_name          	cmdb-servers,rmdb-servers
    service_description     	Mongo Connect Check
    check_command           	check_mongodb!connect!27017!2!4
}

define service {
    use                 	generic-service,graphed-service
    hostgroup_name          	cmdb-servers,rmdb-servers
    service_description     	Mongo Free Connections
    check_command           	check_mongodb!connections!27017!70!80
}

#define service {
#    use                 	generic-service,graphed-service
#    hostgroup_name          	cmdb-servers,rmdb-servers
#    service_description     	Mongo Memory Usage
#    check_command           	check_mongodb!memory!27017!2!3
#    contact_groups		admins-email
#    check_interval			15
#    retry_interval			5
#	notifications_enabled		0	
#}

#define service {
#    use                 	generic-service,graphed-service
#    hostgroup_name          	cmdb-servers
#    service_description     	Mongo Mapped Memory Usage
#    check_command           	check_mongodb!memory_mapped!27017!22!24
#    contact_groups		admins-email
#    check_interval			15
#    retry_interval			5
#    notification_interval		16
#	notifications_enabled		0	
#}

#define service {
#    use                 	generic-service,graphed-service
#    hostgroup_name          	rmdb-servers
#    service_description     	Mongo Mapped Memory Usage
#    check_command           	check_mongodb!memory_mapped!27017!20!40
#    contact_groups		admins-email
#    check_interval			15
#    retry_interval			5
#	notifications_enabled		0	
#}

define service {
    use                 	generic-service,graphed-service
    hostgroup_name          	cmdb-servers,rmdb-servers
    service_description     	Mongo Lock Percentage
    check_command           	check_mongodb!lock!27017!5!10
    check_interval			5
    retry_interval			4	
    notification_interval		6
}

#define service {
#    use                 	generic-service,graphed-service
#    hostgroup_name          	cmdb-servers,rmdb-servers
#    service_description     	Mongo Flush Average
#    check_command           	check_mongodb!flushing!27017!300!700
#    check_interval			5
#    retry_interval			5
#}

#define service {
#    use                 	generic-service,graphed-service
#    hostgroup_name          	cmdb-servers
#    service_description     	Mongo Last Flush Time
#    check_command           	check_mongodb!last_flush_time!27017!200!400
#    check_interval			5
#    retry_interval			5
#}

#define service {
#    use                 	generic-service,graphed-service
#    hostgroup_name          	rmdb-servers
#    service_description     	Mongo Last Flush Time
#    check_command           	check_mongodb!last_flush_time!27017!400!700
#    check_interval			5
#    retry_interval			5
#}

define service {
    use                 	generic-service,graphed-service
    hostgroup_name          	cmdb-servers,rmdb-servers
    service_description     	MongoDB Index Miss Ratio
    check_command           	check_mongodb!index_miss_ratio!27017!.005!.01
    check_interval			5
    retry_interval			4
    notification_interval		6
}

define service {
    use                 	generic-service,graphed-service
    hostgroup_name          	cmdb-servers,rmdb-servers
    service_description     	MongoDB Number of Databases
    check_command           	check_mongodb!databases!27017!7!8
    contact_groups		admins-email
    check_interval			15
    retry_interval			5
    notification_interval		16
	notifications_enabled		0	
}

define service {
    use                 	generic-service,graphed-service
    hostgroup_name          	cmdb-servers,rmdb-servers
    service_description     	MongoDB Number of Collections
    check_command           	check_mongodb!collections!27017!66!70
    contact_groups		admins-email
    check_interval			15
    retry_interval			5
    notification_interval		16
	notifications_enabled		0	
}

define service {
    use                 	generic-service,graphed-service
    hostgroup_name          	cmdb-servers
    service_description     	MongoDB Database size revportal
    check_command           	check_mongodb_database!database_size!27017!11000!13500!revportal
    contact_groups		admins-email
    check_interval			15
    retry_interval			5
    notification_interval		16
	notifications_enabled		0	
}

define service {
    use                 	generic-service,graphed-service
    hostgroup_name          	cmdb-servers
    service_description     	MongoDB Database size purgejobs
    check_command           	check_mongodb_database!database_size!27017!3300!3600!purgejobs
    contact_groups		admins-email
    check_interval			15
    retry_interval			5
    notification_interval		16
	notifications_enabled		0	
}

#define service {
#    use                 	generic-service,graphed-service
#    hostgroup_name          	rmdb-servers
#    service_description     	MongoDB Database size cube_development
#    check_command           	check_mongodb_database!database_size!27017!4500!5000!cube_development
#    contact_groups		admins-email
#    check_interval			15
#    retry_interval			5
#	notifications_enabled		0	
#}

define service {
    use                 	generic-service,graphed-service
    hostgroup_name          	cmdb-servers
    service_description     	MongoDB Updates per Second
    check_command           	check_mongodb_query!queries_per_second!27017!12!15!update
    check_interval			5
    retry_interval			4
    notification_interval		6
}

define service {
    use                 	generic-service,graphed-service
    hostgroup_name          	rmdb-servers
    service_description     	MongoDB Updates per Second
    check_command           	check_mongodb_query!queries_per_second!27017!8!15!update
    check_interval			5
    retry_interval			4
    notification_interval		6
}

define service {
    use                 	generic-service,graphed-service
    hostgroup_name          	cmdb-servers,rmdb-servers
    service_description     	Mongo Replication Lag
    check_command           	check_mongodb!replication_lag!27017!15!30
    notifications_enabled	0
}

define service {
    use		              	generic-service,graphed-service
    hostgroup_name          	cmdb-servers,rmdb-servers
    service_description     	Mongo Replication Lag Percentage
    check_command           	check_mongodb!replication_lag_percent!27017!50!75
}

define service {
    use		              	generic-service,graphed-service
    hostgroup_name          	cmdb-servers,rmdb-servers
    service_description     	MongoDB Replication State
    check_command           	check_mongodb!replset_state!27017!0!0
}


define service {
	use				generic-service,graphed-service
	hostgroup_name			graphite-servers
	service_description		Graphite Service 2003/TCP
	check_command 			check_tcp!2003! -t 5 -w 1 -c 2
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers
	host_name			!KNA02-BP01
	service_description		Apt: Updates
	check_command			check_nrpe!check_apt! -a "-t 20"
	check_interval			300
	retry_interval			299
	notification_interval		301
	notifications_enabled		0	
} 

define service {
	use				generic-service,graphed-service
	hostgroup_name			api-frontend-services
	service_description		Purge API Workflow
	check_command			check_revsw_purge_api_workflow
	check_interval			2
	retry_interval			2
	contact_groups			admins-email
	notifications_enabled		0	
} 

#define service {
#	use				generic-service,graphed-service
#	host_name			RUM_WORKFLOW_TEST
#	service_description		RUM Submission Test
#	check_command			check_revsw_timstamped_rum_requests
##	event_handler			restart_cube_service
#} 

#define service {
#	use				generic-service,graphed-service
#	host_name			RUM_WORKFLOW_TEST
#	service_description		RUM and CUBE HTTP Workflow
#	check_command			check_revsw_rum_workflow
##	event_handler			restart_cube_service
#} 

#define service {
#	use				generic-service,graphed-service
#	host_name			RUM_WORKFLOW_TEST
#	service_description		RUM and CUBE HTTPS Workflow
#	check_command			check_revsw_rum_workflow! -d rum_workflow_test_https.revdn.net
#	max_check_attempts 		3
##	event_handler			restart_cube_service
#} 

#define service {
#	use				generic-service,graphed-service
#	host_name			IAD02-RUM01
#	service_description		RUM and CUBE HTTPS Workflow
#	check_command			check_revsw_rum_workflow! -d rum_workflow_test_iad02-rum01.revdn.net
#} 

#define service {
#	use				generic-service,graphed-service
#	host_name			IAD02-RUM02
#	service_description		RUM and CUBE HTTPS Workflow
#	check_command			check_revsw_rum_workflow! -d rum_workflow_test_iad02-rum02.revdn.net
#} 

#define service {
#	use				generic-service,graphed-service
#	host_name			IAD02-RUM03
#	service_description		RUM and CUBE HTTPS Workflow
#	check_command			check_revsw_rum_workflow! -d rum_workflow_test_iad02-rum03.revdn.net
#} 

define service {
	use				generic-service
	hostgroup_name			linux-servers
	service_description		Syslog Keepalive
	check_command			check_file_age! -w 300 -c 600 -f /var/syslog_monitoring_marks/$HOSTNAME$
	check_interval			5
	retry_interval			5
	contact_groups			admins-email
	notifications_enabled		0	
} 

define service {
	use				generic-service,graphed-service
	hostgroup_name			elb-instances
	service_description		ELB Health Status
	check_command			check_elb_health
} 

define service {
	use				generic-service,graphed-service
	hostgroup_name			pgsql-servers
	service_description		PGSQL: Basic Status
	check_command			check_nrpe!check_pgsql! -a "-l nagios -p 123qweasdzxc -H localhost"
} 

define service {
	use				generic-service,graphed-service
	hostgroup_name			ipmi-servers
	service_description		IPMI Status
	check_command			check_nrpe!check_ipmi_sensor
	check_interval			5
	retry_interval			5
	notifications_enabled		0	
} 

define service {
	use				generic-service,graphed-service
	hostgroup_name			linux-servers
	service_description		UFW Firewall Status
	check_command			check_nrpe!check_ufw_status
        check_interval                  15
        retry_interval                  5
        notification_interval           16
        notifications_enabled           0
} 

define service {
	use				generic-service,graphed-service
	host_name			IAD02-MONITOR01
	service_description		NSONE GLB Host Monitoring
	check_command			check_nsone_monitor_status
	check_interval			1
	retry_interval			1
	notifications_enabled		0	
} 

#define service {
#       use                             generic-service,graphed-service
#       hostgroup_name                  bp-servers
#       service_description             HTTP Test: http://rum01.revsw.net/service
#       check_command                   check_http! -k "Accept-Encoding: deflate, gzip" -H rum01.revsw.net  -t 5 -w 1 -c 2  -u "/service" -e "200"
#       contact_groups                  admins-email
#}

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			bp-servers
#	service_description		Shared Memory Usage
#	check_command			check_nrpe!check_shared_memory_usage! -a "60 90"
#	check_interval			5
#	retry_interval			5
#	notifications_enabled		0	
#} 

define service {
	use				generic-service,graphed-service
	hostgroup_name			bp-servers,!validation-proxy-servers
	service_description		ES Access Log Records
	check_command			check_es_upload_status
	check_interval			5
	retry_interval			5
#	notifications_enabled		0	
} 

define service {
	use				generic-service,graphed-service
	hostgroup_name			bp-servers,!validation-proxy-servers
	service_description		ES NAXSI Log Records
	check_command			check_es_naxsi_upload_status! -w 5 -c 1
	check_interval			5
	retry_interval			5
	notifications_enabled		0	
} 


define service {
	use				generic-service,graphed-service
	hostgroup_name			bp-servers,!SJC02-hosts
	service_description		ES 502 Hits Status
	check_command			check_es_status_codes! -s 502 -w 15 -c 30
	check_interval			5
	retry_interval			5
	notifications_enabled		0	
}

# SJC02 proxies are getting a lot of search engine crawler traffic and this generates a lot of 
# false 502 errors. Increasing the 502 alerting level to avoid false positive alerts.
define service {
	use				generic-service,graphed-service
	hostgroup_name			SJC02-hosts
	service_description		ES 502 Hits Status
	check_command			check_es_status_codes! -s 502 -w 50 -c 100
	check_interval			5
	retry_interval			5
	notifications_enabled		0	
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers
        service_description             ES 504 Hits Status
        check_command                   check_es_status_codes! -s 504 -w 1 -c 10
        check_interval                  5
        retry_interval                  5
        notifications_enabled           0
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			es-servers
	service_description		ElasticSearch Status
	check_command			check_elasticsearch! --master-nodes=1
	check_interval			5
	retry_interval			5
# 	notifications_enabled		0	
} 

define service {
	use				generic-service,graphed-service
	hostgroup_name			es-servers
	host_name			!IAD02-ESURL01,!IAD02-ESURL02
	service_description		ElasticSearch Heap Memory Status
	check_command			check_es_system! -t mem -d 150
	check_interval			5
	retry_interval			5
	notifications_enabled		0	
} 

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-ESURL01,IAD02-ESURL02
        service_description             ElasticSearch Heap Memory Status
        check_command                   check_es_system! -t mem -d 40
        check_interval                  5
        retry_interval                  5
        notifications_enabled           0
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			logstash-servers
	service_description		Logstash 5001/TCP Port
	check_command			check_tcp!5001! -w 1 -c 3 -t 5
} 

#define service {
#	use				generic-service,graphed-service
#	host_name			ELB-ES-API-9200
#	service_description		ElasticSearch Unparsed Records
#	check_command			check_es_unparsed_records
#	notifications_enabled		0	
#} 

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			linux-servers
#	host_name			!IAD02-MONITOR01
#	service_description		Linux Context Switches
#	check_command			check_nrpe!check_linux_context_switches! -a "-w 1000 -c 2000"
#	check_interval			5
#	retry_interval			5
#	notifications_enabled		0	
#} 

#define service {
#	use				generic-service,graphed-service
#	host_name			IAD02-MONITOR01
#	service_description		Linux Context Switches
#	check_command			check_nrpe!check_linux_context_switches! -a "-w 4000 -c 6000"
#	check_interval			5
#	retry_interval			5
#	notifications_enabled		0	
#} 

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			linux-servers,!hv-servers,!eth1-servers,!server-with-packet-loss-on-eth0,!venet0-servers
#	host_name			!MOW02-BP01,!MIL02-BP01
#		# ,!TLV02-BP01
#	service_description		Net: eth0 Interface Stats
#	check_command			check_nrpe!check_linux_interface! -a "--interface eth0 -e"
#	check_interval			5
#	retry_interval			5
#	notifications_enabled		0	
#} 

define service {
	use				generic-service,graphed-service
	hostgroup_name			eth1-servers,!hv-servers
	service_description		Net: eth1 Interface Stats
	check_command			check_nrpe!check_linux_interface! -a "--interface eth1 -e"
	check_interval			5
	retry_interval			5
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			http-servers, wptserver-servers
	service_description		HTTP
	check_command 			check_http! -u "/" -t 5 -w 1 -c 3
}

define service {
	use				generic-service,graphed-service
	hostgroup_name			bp-servers
	service_description		Nginx Status
	check_command 			check_nginx_status! -w 160000,500,500 -c 180000,650,650
	notifications_enabled		0	
}

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			pulse-servers
#	service_description		HTTP Pulse Test URL
#	check_command 			check_http_pulse! -t 5 -w 1 -c 2
#	notifications_enabled		0	
#}

define service {
	use				generic-service,graphed-service
	hostgroup_name			HQ-hosts
	service_description		Jenkins Github Web-hook
	check_command 			check_http!-S -I jenkins-pub.revsw.net -H jenkins-pub.revsw.net -p 9884 -u "/github-webhook/" -t 5 -w 2 -c 3 -e 405
	notifications_enabled		0	
}

define service {
	use				generic-service,graphed-service
	host_name			IAD02-CDS01
	service_description		Offline BP Servers
	check_command 			check_cds_status_attributes!/v1/system/status! -e number_of_offline_bp_servers -w 0 -c 2 -p number_of_offline_bp_servers
	notifications_enabled		0	
}

#define service {
#	use				generic-service,graphed-service
#	hostgroup_name			test-cds-servers
#	service_description		Offline BP Servers
#	check_command 			check_test_cds_status_attributes!/v1/system/status! -e number_of_offline_bp_servers -w 2 -c 3 -p number_of_offline_bp_servers
#	notifications_enabled		0	
#}


define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Pending BP Servers
        check_command                   check_cds_status_attributes!/v1/system/status! -e number_of_pending_bp_servers -w 17 -c 20 -p number_of_pending_bp_servers
        notifications_enabled           0
}

#define service {
#        use                             generic-service,graphed-service
#        hostgroup_name                  test-cds-servers
#        service_description             Pending BP Servers
#        check_command                   check_test_cds_status_attributes!/v1/system/status! -e number_of_pending_bp_servers -w 0 -c 2 -p number_of_pending_bp_servers
#        notifications_enabled           0
#}


define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Online Servers Late On Purge Jobs
        check_command                   check_cds_status_attributes!/v1/purge_jobs/status! -e number_of_outdated_online_servers -w 0 -c 2 -p number_of_outdated_online_servers
	check_interval			2
	retry_interval			2
}

#define service {
#        use                             generic-service,graphed-service
#        hostgroup_name                  test-cds-servers
#        service_description             Online Servers Late On Purge Jobs
#        check_command                   check_test_cds_status_attributes!/v1/purge_jobs/status! -e number_of_outdated_online_servers -w 0 -c 2 -p number_of_outdated_online_servers
#	check_interval			2
#	retry_interval			2
#	notifications_enabled		0	
#}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Pending Servers Late On Purge Jobs
        check_command                   check_cds_status_attributes!/v1/purge_jobs/status! -e number_of_outdated_pending_servers -w 0 -c 2 -p number_of_outdated_pending_servers
        notifications_enabled           0
}

define service {
        use                             generic-service
        host_name                       IAD02-CDS01
        service_description             Status of Purge Jobs Runner
        check_command                   check_cds_status_attributes!/v1/purge_jobs/status!-e purge_job_running -r true
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Online BP Production Servers Late On Domain Config Jobs
        check_command                   check_cds_status_attributes!/v1/domain_config_jobs/status! -e prod.online.BP  -w 0 -c 2 -p prod.online.BP
	check_interval			5
	retry_interval			5
}

#define service {
#        use                             generic-service,graphed-service
#        hostgroup_name                  test-cds-servers
#        service_description             Online BP Production Servers Late On Domain Config Jobs
#        check_command                   check_test_cds_status_attributes!/v1/domain_config_jobs/status! -e prod.online.BP  -w 0 -c 2 -p prod.online.BP
#	check_interval			5
#	retry_interval			5
#	notifications_enabled		0	
#}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Pending BP Production Servers Late On Domain Config Jobs
        check_command                   check_cds_status_attributes!/v1/domain_config_jobs/status! -e prod.pending.BP  -w 0 -c 2 -p prod.pending.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Pending BP Staging Servers Late On Domain Config Jobs
        check_command                   check_cds_status_attributes!/v1/domain_config_jobs/status! -e staging.pending.BP  -w 0 -c 2 -p staging.pending.BP
	check_interval			5
	retry_interval			5
}

#define service {
#        use                             generic-service,graphed-service
#        hostgroup_name                  test-cds-servers
#        service_description             Pending BP Staging Servers Late On Domain Config Jobs
#        check_command                   check_test_cds_status_attributes!/v1/domain_config_jobs/status! -e staging.pending.BP  -w 0 -c 2 -p staging.pending.BP
#        check_interval                  5
#        retry_interval                  5
#	notifications_enabled		0	
#}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Online BP Production Servers Late On App Jobs
        check_command                   check_cds_status_attributes!/v1/app_jobs/status! -e prod.online.BP  -w 0 -c 2 -p prod.online.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  test-cds-servers
        service_description             Online BP Production Servers Late On App Jobs
        check_command                   check_test_cds_status_attributes!/v1/app_jobs/status! -e prod.online.BP  -w 0 -c 2 -p prod.online.BP
	notifications_enabled		0	
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Pending BP Production Servers Late On App Jobs
        check_command                   check_cds_status_attributes!/v1/app_jobs/status! -e prod.pending.BP  -w 0 -c 2 -p prod.pending.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Online BP Production Servers Late On SSL Jobs
        check_command                   check_cds_status_attributes!/v1/ssl_jobs/status! -e prod.online.BP  -w 0 -c 2 -p prod.online.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  test-cds-servers
        service_description             Online BP Production Servers Late On SSL Jobs
        check_command                   check_test_cds_status_attributes!/v1/ssl_jobs/status! -e prod.online.BP  -w 0 -c 2 -p prod.online.BP
	check_interval			5
	retry_interval			5
	notifications_enabled		0	
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Pending BP Production Servers Late On SSL Jobs
        check_command                   check_cds_status_attributes!/v1/ssl_jobs/status! -e prod.pending.BP  -w 0 -c 2 -p prod.pending.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Online BP Validation Servers Late On SSL Jobs
        check_command                   check_cds_status_attributes!/v1/ssl_jobs/status! -e validation.online.BP  -w 0 -c 2 -p validation.online.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Pending BP Validation Servers Late On SSL Jobs
        check_command                   check_cds_status_attributes!/v1/ssl_jobs/status! -e validation.pending.BP  -w 0 -c 2 -p validation.pending.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Online BP Staging Servers Late On Domain Config Jobs
        check_command                   check_cds_status_attributes!/v1/domain_config_jobs/status! -e staging.online.BP  -w 0 -c 2 -p staging.online.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Online BP Staging Servers Late On App Jobs
        check_command                   check_cds_status_attributes!/v1/app_jobs/status! -e staging.online.BP  -w 0 -c 2 -p staging.online.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Online BP Staging Servers Late On SSL Jobs
        check_command                   check_cds_status_attributes!/v1/ssl_jobs/status! -e staging.online.BP  -w 0 -c 2 -p staging.online.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  test-cds-servers
        service_description             Online BP Staging Servers Late On SSL Jobs
        check_command                   check_test_cds_status_attributes!/v1/ssl_jobs/status! -e staging.online.BP  -w 0 -c 2 -p staging.online.BP
	check_interval			5
	retry_interval			5
        notifications_enabled           0
}

define service {
        use                             generic-service
        host_name                       IAD02-CDS01
        service_description             Status of Domain Config Jobs Runner
        check_command                   check_cds_status_attributes!/v1/domain_config_jobs/status! -e domain_config_job_running -r true
}

define service {
        use                             generic-service
        host_name                       IAD02-CDS01
        service_description             Status of App Jobs Runner
        check_command                   check_cds_status_attributes!/v1/app_jobs/status! -e app_job_running -r true
}

define service {
        use                             generic-service
        host_name                       IAD02-CDS01
        service_description             Status of SSL Jobs Runner
	event_handler			restart_cds_service
        check_command                   check_cds_status_attributes!/v1/ssl_jobs/status! -e ssl_cert_job_running -r true
}

# WAF Rules

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Online BP Production Servers Late On WAF Rule Jobs
        check_command                   check_cds_status_attributes!/v1/waf_rule_jobs/status! -e prod.online.BP  -w 0 -c 2 -p prod.online.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  test-cds-servers
        service_description             Online BP Production Servers Late On WAF Rule Jobs
        check_command                   check_test_cds_status_attributes!/v1/waf_rule_jobs/status! -e prod.online.BP  -w 0 -c 2 -p prod.online.BP
	check_interval			5
	retry_interval			5
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  test-cds-servers
        service_description             Online BP Staging Servers Late On WAF Rule Jobs
        check_command                   check_test_cds_status_attributes!/v1/waf_rule_jobs/status! -e staging.online.BP  -w 0 -c 2 -p staging.online.BP
        check_interval                  5
        retry_interval                  5
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Pending BP Production Servers Late On WAF Rule Jobs
        check_command                   check_cds_status_attributes!/v1/waf_rule_jobs/status! -e prod.pending.BP  -w 0 -c 2 -p prod.pending.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Online BP Validation Servers Late On WAF Rule Jobs
        check_command                   check_cds_status_attributes!/v1/waf_rule_jobs/status! -e validation.online.BP  -w 0 -c 2 -p validation.online.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Pending BP Validation Servers Late On WAF Rule Jobs
        check_command                   check_cds_status_attributes!/v1/waf_rule_jobs/status! -e validation.pending.BP  -w 0 -c 2 -p validation.pending.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Online BP Staging Servers Late On WAF Rule Jobs
        check_command                   check_cds_status_attributes!/v1/waf_rule_jobs/status! -e staging.online.BP  -w 0 -c 2 -p staging.online.BP
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service
        host_name                       IAD02-CDS01
        service_description             Status of WAF Rule Jobs Runner
        check_command                   check_cds_status_attributes!/v1/waf_rule_jobs/status! -e waf_rule_job_running -r true
}

define service {
        use                             generic-service
        host_name                       IAD02-CDS01
        service_description             Status of ImageEngine Purge Jobs Runner
        check_command                   check_cds_status_attributes!/v1/image_engine_purge_jobs/status! -e image_engine_purge_job_running -r true
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Number of IE purge jobs waiting API submission
        check_command                   check_cds_status_attributes!/v1/image_engine_purge_jobs/status! -e count_not_submitted_image_engine_purge_job -w 0 -c 2 -p count_not_submitted_image_engine_purge_job
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Number of IE purge jobs waiting a completion confirmation
        check_command                   check_cds_status_attributes!/v1/image_engine_purge_jobs/status! -e count_not_completed_image_engine_purge_job -w 0 -c 2 -p count_not_completed_image_engine_purge_job
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Status of WAF Rules Generation Jobs Runner
        check_command                   check_cds_status_attributes!/v1/waf_auto_generated_rules_jobs/status! -e waf_rule_generation_job_running -r true
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Number of Uncompleted WAF Rules Generation Jobs
        check_command                   check_cds_status_attributes!/v1/waf_auto_generated_rules_jobs/status! -e uncompleted_jobs -w 0 -c 2 -p uncompleted_jobs
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Number of Failed WAF Rules Generation Jobs
        check_command                   check_cds_status_attributes!/v1/waf_auto_generated_rules_jobs/status! -e failed_jobs -w 0 -c 2 -p failed_jobs
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-CDS01
        service_description             Number of Failed WAF Rules Generation Jobs 2
        check_command                   check_cds_status_attributes!/v1/waf_auto_generated_rules_jobs/status! -e failed_generating_rules_jobs -w 0 -c 2 -p failed_generating_rules_jobs
	check_interval			5
	retry_interval			5
}

define service {
        use                             generic-service,graphed-service
        host_name                       SJC02-WT01
        service_description             Uncompleted WebTest Jobs
        check_command                   check_webtest_status_attributes!/status! -e uncompleted_jobs -w 0 -c 2 -p uncompleted_jobs
        check_interval                  5
        retry_interval                  5
}

#define service {
#        use                             generic-service
#        hostgroup_name                  bp-servers   
##                                                 # , test-bp-servers
#        service_description             QUIC Proxy Service
#        check_command                   check_quic_service! "{ \"Endpoint\": \"https://$HOSTADDRESS$:443/\", \"Headers\": { \"Host\": [\"www.nuubit.com\"] }}" !  "Reply"
#        notifications_enabled           0
#}

define service {
        use                             generic-service,graphed-service
        host_name                  	HAIX-ORIGIN
        service_description             HTTP
        check_command                   check_http! -H www.haixusa.com -u "/" -S -t 12 -w 3 -c 10
}

define service {
        use                             generic-service,graphed-service
        host_name                       IAD02-MONITOR01
        service_description             Nagios API On Port 8081/TCP
        check_command                   check_http! -p 8081 -u "/host/IAD02-MONITOR01" -t 5 -w 2 -c 3 -e 200 -H $HOSTNAME$ -r "last_time_unreachable" -I localhost
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP fra02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I fra02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP mow02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I mow02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP par02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I par02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP pdx02-bp01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I pdx02-bp01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP lax02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I lax02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP dfw02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I dfw02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP iad02-co02-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I iad02-co02-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP phx02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I phx02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP sjc02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I sjc02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP lax02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I lax02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP ord02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I ord02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP dfw02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I dfw02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP lga02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I lga02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP lon02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I lon02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP ams02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I ams02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP hkg02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I hkg02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP sea02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I sea02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP atl02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I atl02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP maa02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I maa02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP tlv02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I tlv02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP vie02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I vie02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP del02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I del02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP blr02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I blr02-co01-vip01.revdn.net -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        hostgroup_name                  bp-servers, !wallarm-servers
        service_description             HTTP CO VIP qro02-co01-vip01.revdn.net
        check_command                   check_nrpe!check_http! -a "-I qro02-co01-vip01.revdn.net  -p 18000 -u /test-cache.js -H monitor.revsw.net -t 5 -w 2 -c 3 -e 200"
        notifications_enabled           0
}

define service {
        use                             generic-service,graphed-service
        host_name                       ORD03-LS01
        service_description             Number of Failed Log Shipping Jobs
        check_command                   check_logshipper_status_attributes!/v1/status! -e jobs_shipping_failed -w 0 -c 2 -p jobs_shipping_failed
        check_interval                  5
        retry_interval                  5
}

